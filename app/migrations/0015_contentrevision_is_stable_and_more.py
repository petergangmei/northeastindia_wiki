# Generated by Django 5.2.4 on 2025-08-02 13:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0014_content_edit_count_content_protected_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='contentrevision',
            name='is_stable',
            field=models.BooleanField(default=False, help_text='Is this the stable/public version?'),
        ),
        migrations.AddField(
            model_name='contentrevision',
            name='quality_level',
            field=models.IntegerField(default=0, help_text='Quality level (0=basic, 1=good, 2=featured)'),
        ),
        migrations.AddField(
            model_name='contentrevision',
            name='sighted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='contentrevision',
            name='sighted_by',
            field=models.ForeignKey(blank=True, help_text='User who sighted this revision', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sighted_revisions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='content',
            name='protection_level',
            field=models.CharField(choices=[('unprotected', 'Unprotected'), ('semi_protected', 'Semi-protected'), ('extended_confirmed', 'Extended Confirmed Protected'), ('pending_changes', 'Pending Changes'), ('protected', 'Protected'), ('fully_protected', 'Fully Protected')], default='unprotected', help_text='Wikipedia-style protection level', max_length=20),
        ),
        migrations.AlterField(
            model_name='contentrevision',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('sighted', 'Sighted'), ('flagged', 'Flagged')], default='draft', max_length=20),
        ),
        migrations.CreateModel(
            name='DeletionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deletion_type', models.CharField(choices=[('speedy', 'Speedy Deletion'), ('prod', 'Proposed Deletion (PROD)'), ('afd', 'Articles for Deletion (AfD)')], max_length=10)),
                ('reason_code', models.CharField(choices=[('spam', 'Spam or advertising'), ('copyright', 'Copyright violation'), ('vandalism', 'Vandalism'), ('notability', 'Fails notability requirements'), ('sources', 'Lacks reliable sources'), ('maintenance', 'Technical maintenance'), ('duplicate', 'Duplicate content'), ('attack', 'Attack page or defamatory'), ('other', 'Other (specify in reason)')], max_length=20)),
                ('reason_text', models.TextField(help_text='Detailed explanation for deletion request')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved for Deletion'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('discussion_started', models.BooleanField(default=False)),
                ('discussion_ends', models.DateTimeField(blank=True, help_text='When AfD discussion period ends', null=True)),
                ('grace_period_ends', models.DateTimeField(blank=True, help_text='When PROD grace period ends', null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to='app.content')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deletion_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_deletions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeletionDiscussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vote', models.CharField(choices=[('keep', 'Keep'), ('delete', 'Delete'), ('merge', 'Merge'), ('redirect', 'Redirect'), ('comment', 'Comment only')], default='comment', max_length=10)),
                ('comment', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deletion_votes', to=settings.AUTH_USER_MODEL)),
                ('deletion_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_comments', to='app.deletionrequest')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='deletionrequest',
            index=models.Index(fields=['deletion_type', 'status'], name='app_deletio_deletio_d13bf1_idx'),
        ),
        migrations.AddIndex(
            model_name='deletionrequest',
            index=models.Index(fields=['status', 'created_at'], name='app_deletio_status_5f08aa_idx'),
        ),
    ]
